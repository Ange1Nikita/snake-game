{"version":3,"file":"js/app.5daa07a3.js","mappings":"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","sources":["webpack://snake-game/./src/App.vue","webpack://snake-game/./src/components/SnakeGame.vue","webpack://snake-game/./src/components/SnakeGame.vue?4a62","webpack://snake-game/./src/App.vue?7ccd","webpack://snake-game/./src/main.js","webpack://snake-game/webpack/bootstrap","webpack://snake-game/webpack/runtime/chunk loaded","webpack://snake-game/webpack/runtime/compat get default export","webpack://snake-game/webpack/runtime/define property getters","webpack://snake-game/webpack/runtime/global","webpack://snake-game/webpack/runtime/hasOwnProperty shorthand","webpack://snake-game/webpack/runtime/jsonp chunk loading","webpack://snake-game/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <SnakeGame />\n  </div>\n</template>\n\n<script>\nimport SnakeGame from './components/SnakeGame.vue';\n\nexport default {\n  components: {\n    SnakeGame,\n  },\n};\n</script>","<template>\r\n    <div class=\"game-container\">\r\n        <h1>Змейка</h1>\r\n        <div class=\"theme-buttons\">\r\n            <button @click=\"changeTheme('classic')\">Классическая тема</button>\r\n            <button @click=\"changeTheme('night')\">Ночная тема</button>\r\n            <button @click=\"changeTheme('space')\">Космическая тема</button>\r\n        </div>\r\n        <div class=\"score-board\">\r\n            <p>Счёт: {{ score }}</p>\r\n            <p>Рекорд: {{ highScore }}</p>\r\n        </div>\r\n        <canvas ref=\"gameCanvas\" :width=\"canvasSize\" :height=\"canvasSize\" @touchstart=\"handleTouchStart\"\r\n            @touchmove=\"handleTouchMove\" @touchend=\"handleTouchEnd\"></canvas>\r\n        <p v-if=\"gameOver\">Игра окончена! Нажмите на экран для перезапуска.</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            canvasSize: 400,\r\n            gridSize: 20,\r\n            snake: [{ x: 10, y: 10 }],\r\n            food: { x: 15, y: 15 },\r\n            direction: { x: 0, y: 0 },\r\n            gameOver: false,\r\n            touchStartX: null,\r\n            touchStartY: null,\r\n            score: 0,\r\n            highScore: 0,\r\n            foodColorPhase: 0,\r\n            comets: [], // Массив для хранения комет\r\n            cometInterval: null, // Таймер для генерации комет\r\n            maxComets: 5,\r\n            speed: 0.2, // Скорость движения (часть клетки за шаг)\r\n            initialSpeed: 0.2, // Начальная скорость\r\n            headPosition: { x: 10, y: 10 }, // Плавные координаты головы\r\n            gameLoopTimer: null, // Храним ID таймера\r\n            updateInterval: 100, // Интервал обновления состояния игры (в миллисекундах)\r\n            frameRate: 60, // Частота кадров для отрисовки (в FPS)\r\n            lastUpdateTime: 0, // Время последнего обновления состояния игры\r\n            currentTheme: \"classic\", // Текущая тема\r\n            themes: {\r\n                classic: {\r\n                    background: [\"#87CEEB\", \"#98FB98\"], // Градиент фона\r\n                    snake: { fill: \"green\", stroke: \"darkgreen\" }, // Цвет змейки\r\n                    food: { stroke: \"darkred\" }, // Цвет еды\r\n                },\r\n                night: {\r\n                    background: [\"#000033\", \"#1a1a4d\"], // Тёмный фон\r\n                    snake: { fill: \"#00ff00\", stroke: \"#00cc00\" }, // Светящаяся змейка\r\n                    food: { stroke: \"#ff4500\" }, // Оранжевая еда\r\n                },\r\n                space: {\r\n                    background: [\"#000000\", \"#000033\"], // Космический фон\r\n                    snake: { fill: \"#ffffff\", stroke: \"#cccccc\" }, // Белая змейка\r\n                    food: { stroke: \"#ffff00\" }, // Жёлтая еда\r\n                },\r\n            },\r\n        };\r\n    },\r\n    mounted() {\r\n        // Загружаем сохранённую тему\r\n        const savedTheme = localStorage.getItem(\"currentTheme\");\r\n        if (savedTheme && this.themes[savedTheme]) {\r\n            this.currentTheme = savedTheme; // Устанавливаем сохранённую тему\r\n        } else {\r\n            this.currentTheme = \"classic\"; // По умолчанию устанавливаем классическую тему\r\n        }\r\n\r\n        this.startGame();\r\n        window.addEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n        // Начинаем генерацию комет\r\n        this.startCometSpawning();\r\n    },\r\n    beforeUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n        this.stopCometSpawning();\r\n    },\r\n    methods: {\r\n        spawnComet() {\r\n            if (this.comets.length >= this.maxComets) return;\r\n\r\n            const maxX = this.canvasSize / this.gridSize - 1;\r\n\r\n            const newComet = {\r\n                x: Math.random() * maxX, // Случайная позиция по X\r\n                y: -1, // Комета начинается за пределами экрана\r\n                speed: Math.random() * 0.3 + 0.1, // Скорость от 0.1 до 0.4\r\n                size: Math.random() * 2 + 1, // Размер кометы от 1 до 3\r\n            };\r\n\r\n            this.comets.push(newComet); // Добавляем комету в массив\r\n        },\r\n    startCometSpawning() {\r\n        this.cometInterval = setInterval(() => {\r\n            if (this.currentTheme === \"space\") {\r\n                this.spawnComet(); // Генерируем новую комету\r\n            }\r\n        }, 2000); // Генерация комет каждые 2 секунды\r\n    },\r\n    stopCometSpawning() {\r\n        clearInterval(this.cometInterval); // Останавливаем генерацию комет\r\n    },\r\n    changeTheme(themeName) {\r\n        if (this.currentTheme !== themeName) {\r\n            this.currentTheme = themeName;\r\n            localStorage.setItem(\"currentTheme\", themeName); // Сохраняем тему в localStorage\r\n            console.log(`Тема изменена на: ${themeName}`);\r\n            this.drawGame(); // Перерисовываем игру только если тема изменилась\r\n        }\r\n    },\r\n    startGame() {\r\n        this.snake = [{ x: 10, y: 10 }];\r\n        this.food = { x: 15, y: 15 };\r\n        this.direction = { x: 0, y: 0 };\r\n        this.gameOver = false;\r\n        this.score = 0; // Сбрасываем счёт\r\n        this.speed = this.initialSpeed; // Сбрасываем скорость\r\n        this.headPosition = { x: 10, y: 10 }; // Сбрасываем плавные координаты головы\r\n        this.lastUpdateTime = Date.now(); // Сбрасываем время последнего обновления\r\n\r\n        // Запускаем отрисовку игры\r\n        this.gameLoop();\r\n\r\n        // Запускаем обновление состояния игры\r\n        this.updateGameState();\r\n    },\r\n    updateGameState() {\r\n        const currentTime = Date.now();\r\n        const deltaTime = currentTime - this.lastUpdateTime;\r\n\r\n        // Обновляем состояние игры только если прошло достаточно времени\r\n        if (deltaTime >= this.updateInterval) {\r\n            this.lastUpdateTime = currentTime;\r\n\r\n            let head = {\r\n                x: this.snake[0].x + this.direction.x,\r\n                y: this.snake[0].y + this.direction.y,\r\n            };\r\n\r\n            // Проверяем выход за границы\r\n            if (head.x < 0) head.x = this.canvasSize / this.gridSize - 1; // Слева направо\r\n            if (head.x >= this.canvasSize / this.gridSize) head.x = 0; // Справа налево\r\n            if (head.y < 0) head.y = this.canvasSize / this.gridSize - 1; // Сверху вниз\r\n            if (head.y >= this.canvasSize / this.gridSize) head.y = 0; // Снизу вверх\r\n\r\n            // Добавляем новую голову в начало массива\r\n            this.snake.unshift({ x: head.x, y: head.y });\r\n\r\n            // Проверяем столкновение с едой\r\n            if (head.x === this.food.x && head.y === this.food.y) {\r\n                this.spawnFood(); // Генерируем новую еду\r\n                this.score++;\r\n                if (this.score > this.highScore) {\r\n                    this.highScore = this.score;\r\n                }\r\n                this.playSound(\"sounds/eat.mp3\"); // Звук поедания яблока\r\n\r\n                // Увеличиваем скорость\r\n                if (this.speed < 1) {\r\n                    this.speed += 0.01;\r\n                }\r\n            } else {\r\n                // Удаляем хвост, если еда не съедена\r\n                this.snake.pop();\r\n            }\r\n\r\n            // Проверяем столкновение с самой собой\r\n            if (\r\n                this.snake\r\n                    .slice(1) // Исключаем голову\r\n                    .some(segment => segment.x === head.x && segment.y === head.y)\r\n            ) {\r\n                this.gameOver = true;\r\n                this.playSound(\"sounds/game-over.mp3\"); // Звук окончания игры\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Рекурсивно вызываем обновление состояния игры\r\n        requestAnimationFrame(() => this.updateGameState());\r\n    },\r\n    gameLoop() {\r\n        if (this.gameOver || !this.$refs.gameCanvas) return;\r\n\r\n        // Плавное обновление координат головы\r\n        this.headPosition.x += (this.snake[0].x - this.headPosition.x) * this.speed;\r\n        this.headPosition.y += (this.snake[0].y - this.headPosition.y) * this.speed;\r\n\r\n        // Обработка выхода за границы для плавных координат\r\n        if (this.headPosition.x < 0) this.headPosition.x += this.canvasSize / this.gridSize;\r\n        if (this.headPosition.x >= this.canvasSize / this.gridSize) this.headPosition.x -= this.canvasSize / this.gridSize;\r\n        if (this.headPosition.y < 0) this.headPosition.y += this.canvasSize / this.gridSize;\r\n        if (this.headPosition.y >= this.canvasSize / this.gridSize) this.headPosition.y -= this.canvasSize / this.gridSize;\r\n\r\n        // Обновляем фазу цвета еды для анимации\r\n        this.foodColorPhase += 0.05; // Увеличиваем фазу для плавного изменения цвета\r\n\r\n        if (this.currentTheme === \"space\") {\r\n            this.comets.forEach((comet) => {\r\n                comet.y += comet.speed; // Комета движется вниз\r\n                if (comet.y > this.canvasSize / this.gridSize) {\r\n                    comet.y = -1; // Перемещаем комету наверх, если она вышла за экран\r\n                }\r\n            });\r\n        }\r\n\r\n        // Отрисовываем игру\r\n        if (this.$refs.gameCanvas) {\r\n            this.drawGame();\r\n        }\r\n\r\n        // Вычисляем интервал для следующего кадра\r\n        const interval = 1000 / this.frameRate; // Интервал в миллисекундах\r\n        this.gameLoopTimer = setTimeout(() => this.gameLoop(), interval);\r\n    },\r\n    drawGame() {\r\n        const canvas = this.$refs.gameCanvas;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        // Получаем текущую тему\r\n        const theme = this.themes[this.currentTheme];\r\n\r\n        // Создаём градиент фона\r\n        const gradient = ctx.createLinearGradient(0, 0, this.canvasSize, this.canvasSize);\r\n        gradient.addColorStop(0, theme.background[0]);\r\n        gradient.addColorStop(1, theme.background[1]);\r\n\r\n        // Заливаем фон градиентом\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, this.canvasSize, this.canvasSize);\r\n\r\n        // Рисуем змейку\r\n        ctx.fillStyle = theme.snake.fill;\r\n        ctx.strokeStyle = theme.snake.stroke;\r\n        ctx.lineWidth = 2;\r\n\r\n        this.snake.forEach((segment, index) => {\r\n            const radius = this.gridSize / 2;\r\n\r\n            let centerX, centerY;\r\n            if (index === 0) {\r\n                // Плавные координаты для головы\r\n                centerX = this.headPosition.x * this.gridSize + radius;\r\n                centerY = this.headPosition.y * this.gridSize + radius;\r\n            } else {\r\n                // Дискретные координаты для остальных сегментов\r\n                centerX = segment.x * this.gridSize + radius;\r\n                centerY = segment.y * this.gridSize + radius;\r\n            }\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(centerX, centerY, radius - 2, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        });\r\n\r\n        // Рисуем еду с анимацией\r\n        if (this.food) {\r\n            const hue = Math.sin(this.foodColorPhase) * 30 + 30; // Вычисляем оттенок\r\n            ctx.fillStyle = `hsl(${hue}, 100%, 50%)`;\r\n            ctx.strokeStyle = theme.food.stroke;\r\n            ctx.lineWidth = 2;\r\n            const foodRadius = this.gridSize / 2;\r\n            const foodCenterX = this.food.x * this.gridSize + foodRadius;\r\n            const foodCenterY = this.food.y * this.gridSize + foodRadius;\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(foodCenterX, foodCenterY, foodRadius - 2, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n        // Рисуем кометы (только в космической теме)\r\n        if (this.currentTheme === \"space\") {\r\n            this.comets.forEach((comet) => {\r\n                const cometCenterX = comet.x * this.gridSize + this.gridSize / 2;\r\n                const cometCenterY = comet.y * this.gridSize + this.gridSize / 2;\r\n\r\n                // Рисуем хвост кометы\r\n                for (let i = 0; i < 3; i++) {\r\n                    const size = comet.size * (1 - i * 0.3); // Размер уменьшается\r\n                    const opacity = 1 - i * 0.3; // Прозрачность увеличивается\r\n                    ctx.fillStyle = `rgba(255, 255, 255, ${opacity})`; // Белый цвет с прозрачностью\r\n                    ctx.beginPath();\r\n                    ctx.arc(\r\n                        cometCenterX,\r\n                        cometCenterY - i * this.gridSize * 0.2, // Хвост смещается вверх\r\n                        size,\r\n                        0,\r\n                        Math.PI * 2\r\n                    );\r\n                    ctx.fill();\r\n                }\r\n            });\r\n        }\r\n    },\r\n    spawnFood() {\r\n        const maxX = Math.floor(this.canvasSize / this.gridSize) - 1;\r\n        const maxY = Math.floor(this.canvasSize / this.gridSize) - 1;\r\n\r\n        let newFood;\r\n        let attempts = 0; // Счётчик попыток, чтобы избежать бесконечного цикла\r\n\r\n        do {\r\n            newFood = {\r\n                x: Math.floor(Math.random() * (maxX + 1)),\r\n                y: Math.floor(Math.random() * (maxY + 1)),\r\n            };\r\n            attempts++;\r\n        } while (\r\n            this.snake.some(segment => segment.x === newFood.x && segment.y === newFood.y) &&\r\n            attempts < 100 // Ограничиваем количество попыток\r\n        );\r\n\r\n        if (attempts >= 100) {\r\n            console.error(\"Не удалось сгенерировать еду после 100 попыток!\");\r\n            return;\r\n        }\r\n\r\n        this.food = newFood;\r\n    },\r\n    handleKeyDown(event) {\r\n        if (this.gameOver && event.code === \"Space\") {\r\n            this.startGame();\r\n        }\r\n\r\n        switch (event.code) {\r\n            case \"ArrowUp\":\r\n                if (this.direction.y === 0) this.direction = { x: 0, y: -1 };\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (this.direction.y === 0) this.direction = { x: 0, y: 1 };\r\n                break;\r\n            case \"ArrowLeft\":\r\n                if (this.direction.x === 0) this.direction = { x: -1, y: 0 };\r\n                break;\r\n            case \"ArrowRight\":\r\n                if (this.direction.x === 0) this.direction = { x: 1, y: 0 };\r\n                break;\r\n        }\r\n    },\r\n    handleTouchStart(event) {\r\n        const touch = event.touches[0];\r\n        this.touchStartX = touch.clientX;\r\n        this.touchStartY = touch.clientY;\r\n    },\r\n    handleTouchMove(event) {\r\n        event.preventDefault(); // Предотвращаем прокрутку страницы\r\n    },\r\n    handleTouchEnd(event) {\r\n        const touch = event.changedTouches[0];\r\n        const deltaX = touch.clientX - this.touchStartX;\r\n        const deltaY = touch.clientY - this.touchStartY;\r\n\r\n        // Определяем направление в зависимости от разницы координат\r\n        if (Math.abs(deltaX) > Math.abs(deltaY)) {\r\n            if (deltaX > 0 && this.direction.x === 0) this.direction = { x: 1, y: 0 }; // Вправо\r\n            if (deltaX < 0 && this.direction.x === 0) this.direction = { x: -1, y: 0 }; // Влево\r\n        } else {\r\n            if (deltaY > 0 && this.direction.y === 0) this.direction = { x: 0, y: 1 }; // Вниз\r\n            if (deltaY < 0 && this.direction.y === 0) this.direction = { x: 0, y: -1 }; // Вверх\r\n        }\r\n    },\r\n    handleScreenClick() {\r\n        if (this.gameOver) {\r\n            this.startGame();\r\n        }\r\n    },\r\n    playSound(src) {\r\n        const audio = new Audio(src);\r\n        audio.play();\r\n    },\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.game-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n}\r\n\r\n.score-board {\r\n    margin-bottom: 10px;\r\n    font-size: 18px;\r\n}\r\n\r\ncanvas {\r\n    border: 1px solid black;\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.theme-buttons {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.theme-buttons button {\r\n    padding: 5px 10px;\r\n    font-size: 14px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.theme-buttons button:hover {\r\n    opacity: 0.8;\r\n}\r\n</style>","import { render } from \"./SnakeGame.vue?vue&type=template&id=117201b6&scoped=true\"\nimport script from \"./SnakeGame.vue?vue&type=script&lang=js\"\nexport * from \"./SnakeGame.vue?vue&type=script&lang=js\"\n\nimport \"./SnakeGame.vue?vue&type=style&index=0&id=117201b6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-117201b6\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=01e29237\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksnake_game\"] = self[\"webpackChunksnake_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6795); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_SnakeGame","class","key","_createElementVNode","_hoisted_2","onClick","_cache","$event","$options","changeTheme","_hoisted_3","_toDisplayString","$data","score","highScore","ref","width","canvasSize","height","onTouchstart","args","handleTouchStart","onTouchmove","handleTouchMove","onTouchend","handleTouchEnd","_hoisted_4","gameOver","_hoisted_5","_createCommentVNode","data","gridSize","snake","x","y","food","direction","touchStartX","touchStartY","foodColorPhase","comets","cometInterval","maxComets","speed","initialSpeed","headPosition","gameLoopTimer","updateInterval","frameRate","lastUpdateTime","currentTheme","themes","classic","background","fill","stroke","night","space","mounted","savedTheme","localStorage","getItem","this","startGame","window","addEventListener","handleKeyDown","startCometSpawning","beforeUnmount","removeEventListener","stopCometSpawning","methods","spawnComet","length","maxX","newComet","Math","random","size","push","setInterval","clearInterval","themeName","setItem","console","log","drawGame","Date","now","gameLoop","updateGameState","currentTime","deltaTime","head","unshift","spawnFood","playSound","pop","slice","some","segment","requestAnimationFrame","$refs","gameCanvas","forEach","comet","interval","setTimeout","canvas","ctx","getContext","theme","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","strokeStyle","lineWidth","index","radius","centerX","centerY","beginPath","arc","PI","hue","sin","foodRadius","foodCenterX","foodCenterY","cometCenterX","cometCenterY","i","opacity","floor","maxY","newFood","attempts","error","event","code","touch","touches","clientX","clientY","preventDefault","changedTouches","deltaX","deltaY","abs","handleScreenClick","src","audio","Audio","play","__exports__","components","SnakeGame","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}